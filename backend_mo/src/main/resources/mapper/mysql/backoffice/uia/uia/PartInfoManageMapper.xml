<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.system.backoffice.uat.uia.mapper.PartInfoManageMapper">
	<select id="selectPartInfoPageInfoManageListByPagination"  resultType="PartInfoVO">	
		SELECT X.* , B.ALL_INSTT_NM
		FROM (
			SELECT 
				CASE WHEN PARENT_PART_ID = '0' THEN 
					HI.PART_NM
					ELSE 
					CONCAT(CONCAT(LPAD('', (3*(LEVEL -1)), ' '), 
						IF (LEVEL >1, '└','')),HI.PART_NM) 
				END AS PART_NM_HI, 
				HI.PART_NM,
				HI.PARENT_PART_ID, 
				LEVEL, 
				HI.PART_ORDER, 
				HI.PART_ID,
				HI.PART_USEYN,
				HI.PART_DC,
				HI.INSTT_CODE,
				HI.PART_ENDYN,
				HI.PART_HEAD_USER_ID,
				fn_ManagerNm(HI.PART_HEAD_USER_ID) PART_HEAD_USER_NM,
				HI.PART_END_DE,
				DATE_FORMAT(SUBSTRING( PART_CREATE_DE, 1,8),'%Y-%m-%d') AS PART_CREATE_DE 
			 FROM
			 	( 
			    	WITH RECURSIVE CTE AS(
						SELECT PART_ID, PART_NM, PARENT_PART_ID, 0 AS level
						FROM TB_PARTINFO
						WHERE PARENT_PART_ID = '0'
						UNION ALL
						SELECT c.PART_ID, c.PART_NM, c.PARENT_PART_ID, level+1
						FROM TB_PARTINFO c
						INNER JOIN CTE ON c.PARENT_PART_ID = CTE.PART_ID
					)
					SELECT PART_ID, PART_NM,  level, @ROWNUM :=@ROWNUM + 1 AS ORDERS 
					FROM CTE 
			     ) HO , TB_PARTINFO HI 
			WHERE HO.PART_ID = HI.PART_ID
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchKeyword)">
				<choose>
					<when test="params.searchCondition == 'params.partId'">
						AND PART_ID LIKE CONCAT('%',#{params.searchKeyword},'%') 
					</when>
					<otherwise>
						AND PART_NM LIKE CONCAT('%',#{params.searchKeyword},'%') 
					</otherwise>
				</choose>
			</if>	
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.roleId) and params.roleId != 'ROLE_ADMIN'">
					AND HI.INSTT_CODE = #{params.insttCode} 
					<choose>
						<when test="params.roleId == 'ROLE_TEAM'">
							AND HI.PART_ID IN (WITH RECURSIVE  CTE AS (
												SELECT 
													PART_ID
												FROM TB_PARTINFO
												WHERE PART_ID  = #{params.partId}
												UNION ALL
												SELECT 
													ac.PART_ID, ac.PARENT_PART_ID
												FROM TB_PARTINFO ac
												INNER JOIN CTE bbc on ac.PARENT_PART_ID = bbc.PART_ID
												)
												SELECT PART_ID from CTE
											)
						</when><otherwise>
							AND a.PART_ID = #{params.partId} 
						</otherwise>
					</choose>
				</if>
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchInsttCode)">
				AND INSTT_CODE = #{params.searchInsttCode}
			</if>
			ORDER BY HO.ORDERS ASC  	
		)X LEFT JOIN  COMTNINSTTCODE B
		ON X.INSTT_CODE = B.INSTT_CODE	 	    
	</select>
	<select id="selectPartInfoDetail"  resultType="PartInfoVO">
       SELECT  PART_ID, PART_NM, PART_CREATE_DE, PART_DC, PART_USEYN, PARENT_PART_ID, PART_ORDER, INSTT_CODE
       		   PART_ENDYN, PART_END_DE, PART_HEAD_USER_ID
	   FROM TB_PARTINFO
	   WHERE PART_ID = #{partId}		  
    </select>
    
	<select id="selectPartInfoCombo" resultType="PartInfoVO">
		SELECT 			
			CONCAT(CONCAT(LPAD('', (3*(LEVEL -1)), ' '), 
			IF (LEVEL >1, '└','')),
			HI.PART_NM) AS PART_NM_HI, 
			HI.PART_NM,
			PARENT_PART_ID, 
			LEVEL , 
			HI.PART_ORDER, 
            HI.PART_ID, 
            HI.PART_USEYN, 
            HI.PART_DC,
            HI.PART_CREATE_DE,
            HI.PART_HEAD_USER_ID, 
            HI.PART_END_DE,
            HI.PART_ENDYN
		FROM ( 
				SELECT 
					FN_HIERARCHY(PART_ID) AS PARTID,
					@LEVEL AS LEVEL, 
					@ROWNUM :=@ROWNUM + 1 AS ORDERS 
				FROM 
					(
						WITH RECURSIVE CTE AS(
							SELECT PART_ID, PART_NM, PARENT_PART_ID, 0 AS level
							FROM TB_PARTINFO
							WHERE PARENT_PART_ID = '0'
							UNION ALL
							SELECT c.PART_ID, c.PART_NM, c.PARENT_PART_ID, level+1
							FROM TB_PARTINFO c
							INNER JOIN CTE ON c.PARENT_PART_ID = CTE.PART_ID
						)
						SELECT PART_ID, PART_NM, PARENT_PART_ID, level
						FROM CTE 
					) HO , TB_PARTINFO HI 
		WHERE  HO.PART_ID  =HI.PART_ID
			   AND HI.PART_USEYN ='Y'
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchInsttCode)">
				AND INSTT_CODE = #{params.searchInsttCode}
			</if>
		ORDER BY HO.ORDERS ASC  
    </select>
    
    
    <insert id="insertPartInfoManage">
        INSERT INTO TB_PARTINFO (PARENT_PART_ID, PART_CREATE_DE,  PART_NM, PART_DC, PART_USEYN, 
        						PART_ORDER, INSTT_CODE, PART_HEAD_USER_ID, PART_END_DE, PART_ENDYN, PART_ID)
        VALUES (#{parentPartId},  date_format(now(), '%Y%m%d%H%i%s') , #{partNm} , 
        		#{partDc,jdbcType=VARCHAR},#{partUseyn,jdbcType=VARCHAR}, 
        		#{partOrder, jdbcType=VARCHAR},  #{insttCode, jdbcType=VARCHAR}, #{partHeadUserId, jdbcType=VARCHAR}, 
        		#{partEndyn, jdbcType=VARCHAR}, #{partEndDe, jdbcType=VARCHAR} , FN_PARTCODE()
        )                          
    </insert>
    <update id="updatePartInfoManage">
	    UPDATE  TB_PARTINFO SET PART_NM = #{partNm} 
	                            ,PART_DC = #{partDc,jdbcType=VARCHAR} 
	                            ,part_USEYN = #{partUseyn,jdbcType=VARCHAR} 
	                            ,PARENT_PART_ID = #{parentPartId}  
	                            ,PART_ORDER =  #{partOrder, jdbcType=VARCHAR}
	                            ,INSTT_CODE =  #{insttCode, jdbcType=VARCHAR}
	                            ,PART_HEAD_USER_ID = #{partHeadUserId, jdbcType=VARCHAR}
	                            ,PART_ENDYN = #{partEndyn, jdbcType=VARCHAR}
	                            <if test='#{partEndyn}.equals("Y")'>
	                            , PART_END_DE =  date_format(now(), '%Y%m%d%H%i%s')
	                            </if>
	    WHERE PART_ID = #{partId};	             
    </update>
    <update id="updatePartEndInfoManage">
    	UPDAETE TB_PARTINFO SET PART_ENDYN =  #{partEndyn, jdbcType=VARCHAR}
    							, PART_END_DE =  date_format(now(), '%Y%m%d%H%i%s')
    	WHERE PART_ID = #{partId}
    </update>
	<delete id="deletePartInfoManage">
		DELETE FROM  TB_PARTINFO
		WHERE PART_ID = #{partId}
	</delete>

</mapper>