<?xml version="1.0" encoding="UTF-8"?>
<Configuration>
    <Appenders>
        <Console name="console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d %5p [%c] %m%n" />
        </Console>
    </Appenders>
    <Loggers>
    	<!-- 
        <Logger name="java.sql" level="off" additivity="false">
            <AppenderRef ref="console" />
        </Logger>
         -->
        <Logger name="egovframework" level="trace" additivity="false">
            <AppenderRef ref="console" />
        </Logger>
        <Logger name="com.system.backoffice" level="DEBUG" additivity="false">
            <AppenderRef ref="console" />
        </Logger>
        
        <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. -->
        <!--  많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
        <Logger name="jdbc.audit" additivity="false">
            <level value="OFF" />
            <AppenderRef ref="console" level="off" />
        </Logger>
        <!--  열려있는 모든 번호와 연결 수립 및 해제 이벤트를 기록. 이는 연결 문제를 찾아내는데 매우 유용 (Connection Pool 설정) -->
        <Logger name="jdbc.connection" additivity="false">
        	<level value="OFF" />
            <AppenderRef ref="console" level="off"/>
        </Logger>
        <logger name="java.sql.Connection" additivity="false">
        	<level value="OFF" />
			<appender-ref ref="console" level="off"/>
		</logger>
		<!--  ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
        <logger name="jdbc.resultset" additivity="false"> 
        	<level value="OFF" />
            <appender-ref ref="console" level="off"/> 
        </logger>
        <!--  SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
        <logger name="jdbc.resultsettable" level="info" additivity="false"> 
			<level value="info" />
			<appender-ref ref="console"/> 
        </logger>
        <!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. (원래는 ? 로 표시되는데, log4j 덕분에 완전한 쿼리로 보여지는 것임) -->
        <Logger name="jdbc.sqlonly" additivity="false">
			<level value="info" />
            <AppenderRef ref="console" />
        </Logger>
        <!--  SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
        <!--  ResultSet 내용 사라지-->
        <Logger name="jdbc.sqltiming" additivity="false">
			<level value="OFF" />
            <AppenderRef ref="console" />
        </Logger>
        <Logger name="org.springframework" additivity="false">
			<level value="INFO" />
            <AppenderRef ref="console" />
        </Logger>
        <Root level="INFO">
            <AppenderRef ref="console" />
        </Root>
    </Loggers>
</Configuration>